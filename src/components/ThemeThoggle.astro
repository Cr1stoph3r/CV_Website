---

---

<button
  id="themeToggle"
  title="Theme Toggle"
  class="transform transition duration-500 ease-in-out mr-2 hover:rotate-180 dark:hover:rotate-45"
  ><img src="" alt="theme thoggle" />
</button>
<script is:inline>
  const theme = (() => {
    // Verifica si localStorage está definido y tiene un tema guardado
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    // Verifica la preferencia del sistema
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  // Aplica la clase 'dark' si el tema es 'dark', de lo contrario la quita
  if (theme === "dark") {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }

  // Guarda el tema en localStorage
  window.localStorage.setItem("theme", theme);

  // Función para actualizar el icono del botón de acuerdo al tema
  const updateButtonIcon = (isDark) => {
    const imgElement = document.querySelector("#themeToggle img"); // Asumiendo que el icono está dentro de un elemento <img>
    imgElement.src = isDark ? "/Moon.svg" : "/Sun.svg";
  };
  // Función para manejar el clic del botón de cambio de tema
  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
    updateButtonIcon(isDark);
  };

  //   console.log(theme);

  // Añade el listener al botón de cambio de tema, si existe
  const toggleButton = document.getElementById("themeToggle");
  if (toggleButton) {
    toggleButton.addEventListener("click", handleToggleClick);
    updateButtonIcon(theme === "dark");
  }
</script>
